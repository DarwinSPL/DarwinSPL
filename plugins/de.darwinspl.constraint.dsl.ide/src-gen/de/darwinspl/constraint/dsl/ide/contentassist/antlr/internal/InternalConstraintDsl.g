/*
 * generated by Xtext 2.12.0
 */
grammar InternalConstraintDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.darwinspl.constraint.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.darwinspl.constraint.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.darwinspl.constraint.dsl.services.ConstraintDslGrammarAccess;

}
@parser::members {
	private ConstraintDslGrammarAccess grammarAccess;

	public void setGrammarAccess(ConstraintDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHyConstraintModel
entryRuleHyConstraintModel
:
{ before(grammarAccess.getHyConstraintModelRule()); }
	 ruleHyConstraintModel
{ after(grammarAccess.getHyConstraintModelRule()); } 
	 EOF 
;

// Rule HyConstraintModel
ruleHyConstraintModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyConstraintModelAccess().getGroup()); }
		(rule__HyConstraintModel__Group__0)
		{ after(grammarAccess.getHyConstraintModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyConstraint
entryRuleHyConstraint
:
{ before(grammarAccess.getHyConstraintRule()); }
	 ruleHyConstraint
{ after(grammarAccess.getHyConstraintRule()); } 
	 EOF 
;

// Rule HyConstraint
ruleHyConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyConstraintAccess().getRootExpressionAssignment()); }
		(rule__HyConstraint__RootExpressionAssignment)
		{ after(grammarAccess.getHyConstraintAccess().getRootExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyExpression
entryRuleHyExpression
:
{ before(grammarAccess.getHyExpressionRule()); }
	 ruleHyExpression
{ after(grammarAccess.getHyExpressionRule()); } 
	 EOF 
;

// Rule HyExpression
ruleHyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyExpressionAccess().getHyImpliesExpressionParserRuleCall()); }
		ruleHyImpliesExpression
		{ after(grammarAccess.getHyExpressionAccess().getHyImpliesExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyImpliesExpression
entryRuleHyImpliesExpression
:
{ before(grammarAccess.getHyImpliesExpressionRule()); }
	 ruleHyImpliesExpression
{ after(grammarAccess.getHyImpliesExpressionRule()); } 
	 EOF 
;

// Rule HyImpliesExpression
ruleHyImpliesExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyImpliesExpressionAccess().getGroup()); }
		(rule__HyImpliesExpression__Group__0)
		{ after(grammarAccess.getHyImpliesExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyEquivalenceExpression
entryRuleHyEquivalenceExpression
:
{ before(grammarAccess.getHyEquivalenceExpressionRule()); }
	 ruleHyEquivalenceExpression
{ after(grammarAccess.getHyEquivalenceExpressionRule()); } 
	 EOF 
;

// Rule HyEquivalenceExpression
ruleHyEquivalenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyEquivalenceExpressionAccess().getGroup()); }
		(rule__HyEquivalenceExpression__Group__0)
		{ after(grammarAccess.getHyEquivalenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyAndExpression
entryRuleHyAndExpression
:
{ before(grammarAccess.getHyAndExpressionRule()); }
	 ruleHyAndExpression
{ after(grammarAccess.getHyAndExpressionRule()); } 
	 EOF 
;

// Rule HyAndExpression
ruleHyAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyAndExpressionAccess().getGroup()); }
		(rule__HyAndExpression__Group__0)
		{ after(grammarAccess.getHyAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyOrExpression
entryRuleHyOrExpression
:
{ before(grammarAccess.getHyOrExpressionRule()); }
	 ruleHyOrExpression
{ after(grammarAccess.getHyOrExpressionRule()); } 
	 EOF 
;

// Rule HyOrExpression
ruleHyOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyOrExpressionAccess().getGroup()); }
		(rule__HyOrExpression__Group__0)
		{ after(grammarAccess.getHyOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
		(rule__TerminalExpression__Alternatives)
		{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyNestedExpression
entryRuleHyNestedExpression
:
{ before(grammarAccess.getHyNestedExpressionRule()); }
	 ruleHyNestedExpression
{ after(grammarAccess.getHyNestedExpressionRule()); } 
	 EOF 
;

// Rule HyNestedExpression
ruleHyNestedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyNestedExpressionAccess().getGroup()); }
		(rule__HyNestedExpression__Group__0)
		{ after(grammarAccess.getHyNestedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyNotExpression
entryRuleHyNotExpression
:
{ before(grammarAccess.getHyNotExpressionRule()); }
	 ruleHyNotExpression
{ after(grammarAccess.getHyNotExpressionRule()); } 
	 EOF 
;

// Rule HyNotExpression
ruleHyNotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyNotExpressionAccess().getGroup()); }
		(rule__HyNotExpression__Group__0)
		{ after(grammarAccess.getHyNotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyFeatureReferenceExpression
entryRuleHyFeatureReferenceExpression
:
{ before(grammarAccess.getHyFeatureReferenceExpressionRule()); }
	 ruleHyFeatureReferenceExpression
{ after(grammarAccess.getHyFeatureReferenceExpressionRule()); } 
	 EOF 
;

// Rule HyFeatureReferenceExpression
ruleHyFeatureReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getGroup()); }
		(rule__HyFeatureReferenceExpression__Group__0)
		{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyConditionalFeatureReferenceExpression
entryRuleHyConditionalFeatureReferenceExpression
:
{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionRule()); }
	 ruleHyConditionalFeatureReferenceExpression
{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionRule()); } 
	 EOF 
;

// Rule HyConditionalFeatureReferenceExpression
ruleHyConditionalFeatureReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getGroup()); }
		(rule__HyConditionalFeatureReferenceExpression__Group__0)
		{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyVersionRestriction
entryRuleHyVersionRestriction
:
{ before(grammarAccess.getHyVersionRestrictionRule()); }
	 ruleHyVersionRestriction
{ after(grammarAccess.getHyVersionRestrictionRule()); } 
	 EOF 
;

// Rule HyVersionRestriction
ruleHyVersionRestriction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyVersionRestrictionAccess().getAlternatives()); }
		(rule__HyVersionRestriction__Alternatives)
		{ after(grammarAccess.getHyVersionRestrictionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyRelativeVersionRestriction
entryRuleHyRelativeVersionRestriction
:
{ before(grammarAccess.getHyRelativeVersionRestrictionRule()); }
	 ruleHyRelativeVersionRestriction
{ after(grammarAccess.getHyRelativeVersionRestrictionRule()); } 
	 EOF 
;

// Rule HyRelativeVersionRestriction
ruleHyRelativeVersionRestriction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getGroup()); }
		(rule__HyRelativeVersionRestriction__Group__0)
		{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyVersionRangeRestriction
entryRuleHyVersionRangeRestriction
:
{ before(grammarAccess.getHyVersionRangeRestrictionRule()); }
	 ruleHyVersionRangeRestriction
{ after(grammarAccess.getHyVersionRangeRestrictionRule()); } 
	 EOF 
;

// Rule HyVersionRangeRestriction
ruleHyVersionRangeRestriction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getAlternatives()); }
		(rule__HyVersionRangeRestriction__Alternatives)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyBooleanValueExpression
entryRuleHyBooleanValueExpression
:
{ before(grammarAccess.getHyBooleanValueExpressionRule()); }
	 ruleHyBooleanValueExpression
{ after(grammarAccess.getHyBooleanValueExpressionRule()); } 
	 EOF 
;

// Rule HyBooleanValueExpression
ruleHyBooleanValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyBooleanValueExpressionAccess().getGroup()); }
		(rule__HyBooleanValueExpression__Group__0)
		{ after(grammarAccess.getHyBooleanValueExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyArithmeticalComparisonExpression
entryRuleHyArithmeticalComparisonExpression
:
{ before(grammarAccess.getHyArithmeticalComparisonExpressionRule()); }
	 ruleHyArithmeticalComparisonExpression
{ after(grammarAccess.getHyArithmeticalComparisonExpressionRule()); } 
	 EOF 
;

// Rule HyArithmeticalComparisonExpression
ruleHyArithmeticalComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyArithmeticalComparisonExpressionAccess().getHyBinaryArithmeticalComparisonExpressionParserRuleCall()); }
		ruleHyBinaryArithmeticalComparisonExpression
		{ after(grammarAccess.getHyArithmeticalComparisonExpressionAccess().getHyBinaryArithmeticalComparisonExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyBinaryArithmeticalComparisonExpression
entryRuleHyBinaryArithmeticalComparisonExpression
:
{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionRule()); }
	 ruleHyBinaryArithmeticalComparisonExpression
{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionRule()); } 
	 EOF 
;

// Rule HyBinaryArithmeticalComparisonExpression
ruleHyBinaryArithmeticalComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getAlternatives()); }
		(rule__HyBinaryArithmeticalComparisonExpression__Alternatives)
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyGreaterExpression
entryRuleHyGreaterExpression
:
{ before(grammarAccess.getHyGreaterExpressionRule()); }
	 ruleHyGreaterExpression
{ after(grammarAccess.getHyGreaterExpressionRule()); } 
	 EOF 
;

// Rule HyGreaterExpression
ruleHyGreaterExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyGreaterExpressionAccess().getGroup()); }
		(rule__HyGreaterExpression__Group__0)
		{ after(grammarAccess.getHyGreaterExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyLessExpression
entryRuleHyLessExpression
:
{ before(grammarAccess.getHyLessExpressionRule()); }
	 ruleHyLessExpression
{ after(grammarAccess.getHyLessExpressionRule()); } 
	 EOF 
;

// Rule HyLessExpression
ruleHyLessExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyLessExpressionAccess().getGroup()); }
		(rule__HyLessExpression__Group__0)
		{ after(grammarAccess.getHyLessExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyGreaterOrEqualExpression
entryRuleHyGreaterOrEqualExpression
:
{ before(grammarAccess.getHyGreaterOrEqualExpressionRule()); }
	 ruleHyGreaterOrEqualExpression
{ after(grammarAccess.getHyGreaterOrEqualExpressionRule()); } 
	 EOF 
;

// Rule HyGreaterOrEqualExpression
ruleHyGreaterOrEqualExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getGroup()); }
		(rule__HyGreaterOrEqualExpression__Group__0)
		{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyLessOrEqualExpression
entryRuleHyLessOrEqualExpression
:
{ before(grammarAccess.getHyLessOrEqualExpressionRule()); }
	 ruleHyLessOrEqualExpression
{ after(grammarAccess.getHyLessOrEqualExpressionRule()); } 
	 EOF 
;

// Rule HyLessOrEqualExpression
ruleHyLessOrEqualExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getGroup()); }
		(rule__HyLessOrEqualExpression__Group__0)
		{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyEqualExpression
entryRuleHyEqualExpression
:
{ before(grammarAccess.getHyEqualExpressionRule()); }
	 ruleHyEqualExpression
{ after(grammarAccess.getHyEqualExpressionRule()); } 
	 EOF 
;

// Rule HyEqualExpression
ruleHyEqualExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyEqualExpressionAccess().getGroup()); }
		(rule__HyEqualExpression__Group__0)
		{ after(grammarAccess.getHyEqualExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyNotEqualExpression
entryRuleHyNotEqualExpression
:
{ before(grammarAccess.getHyNotEqualExpressionRule()); }
	 ruleHyNotEqualExpression
{ after(grammarAccess.getHyNotEqualExpressionRule()); } 
	 EOF 
;

// Rule HyNotEqualExpression
ruleHyNotEqualExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyNotEqualExpressionAccess().getGroup()); }
		(rule__HyNotEqualExpression__Group__0)
		{ after(grammarAccess.getHyNotEqualExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyArithmeticalValueExpression
entryRuleHyArithmeticalValueExpression
:
{ before(grammarAccess.getHyArithmeticalValueExpressionRule()); }
	 ruleHyArithmeticalValueExpression
{ after(grammarAccess.getHyArithmeticalValueExpressionRule()); } 
	 EOF 
;

// Rule HyArithmeticalValueExpression
ruleHyArithmeticalValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyArithmeticalValueExpressionAccess().getHyDivisionExpressionParserRuleCall()); }
		ruleHyDivisionExpression
		{ after(grammarAccess.getHyArithmeticalValueExpressionAccess().getHyDivisionExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyDivisionExpression
entryRuleHyDivisionExpression
:
{ before(grammarAccess.getHyDivisionExpressionRule()); }
	 ruleHyDivisionExpression
{ after(grammarAccess.getHyDivisionExpressionRule()); } 
	 EOF 
;

// Rule HyDivisionExpression
ruleHyDivisionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyDivisionExpressionAccess().getGroup()); }
		(rule__HyDivisionExpression__Group__0)
		{ after(grammarAccess.getHyDivisionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyMultiplicationExpression
entryRuleHyMultiplicationExpression
:
{ before(grammarAccess.getHyMultiplicationExpressionRule()); }
	 ruleHyMultiplicationExpression
{ after(grammarAccess.getHyMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule HyMultiplicationExpression
ruleHyMultiplicationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyMultiplicationExpressionAccess().getGroup()); }
		(rule__HyMultiplicationExpression__Group__0)
		{ after(grammarAccess.getHyMultiplicationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHySubtractionExpression
entryRuleHySubtractionExpression
:
{ before(grammarAccess.getHySubtractionExpressionRule()); }
	 ruleHySubtractionExpression
{ after(grammarAccess.getHySubtractionExpressionRule()); } 
	 EOF 
;

// Rule HySubtractionExpression
ruleHySubtractionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHySubtractionExpressionAccess().getGroup()); }
		(rule__HySubtractionExpression__Group__0)
		{ after(grammarAccess.getHySubtractionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyAdditionExpression
entryRuleHyAdditionExpression
:
{ before(grammarAccess.getHyAdditionExpressionRule()); }
	 ruleHyAdditionExpression
{ after(grammarAccess.getHyAdditionExpressionRule()); } 
	 EOF 
;

// Rule HyAdditionExpression
ruleHyAdditionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyAdditionExpressionAccess().getGroup()); }
		(rule__HyAdditionExpression__Group__0)
		{ after(grammarAccess.getHyAdditionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalArithmeticalExpression
entryRuleTerminalArithmeticalExpression
:
{ before(grammarAccess.getTerminalArithmeticalExpressionRule()); }
	 ruleTerminalArithmeticalExpression
{ after(grammarAccess.getTerminalArithmeticalExpressionRule()); } 
	 EOF 
;

// Rule TerminalArithmeticalExpression
ruleTerminalArithmeticalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalArithmeticalExpressionAccess().getAlternatives()); }
		(rule__TerminalArithmeticalExpression__Alternatives)
		{ after(grammarAccess.getTerminalArithmeticalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyValueExpression
entryRuleHyValueExpression
:
{ before(grammarAccess.getHyValueExpressionRule()); }
	 ruleHyValueExpression
{ after(grammarAccess.getHyValueExpressionRule()); } 
	 EOF 
;

// Rule HyValueExpression
ruleHyValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyValueExpressionAccess().getValueAssignment()); }
		(rule__HyValueExpression__ValueAssignment)
		{ after(grammarAccess.getHyValueExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyValue
entryRuleHyValue
:
{ before(grammarAccess.getHyValueRule()); }
	 ruleHyValue
{ after(grammarAccess.getHyValueRule()); } 
	 EOF 
;

// Rule HyValue
ruleHyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyValueAccess().getAlternatives()); }
		(rule__HyValue__Alternatives)
		{ after(grammarAccess.getHyValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyNumberValue
entryRuleHyNumberValue
:
{ before(grammarAccess.getHyNumberValueRule()); }
	 ruleHyNumberValue
{ after(grammarAccess.getHyNumberValueRule()); } 
	 EOF 
;

// Rule HyNumberValue
ruleHyNumberValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyNumberValueAccess().getValueAssignment()); }
		(rule__HyNumberValue__ValueAssignment)
		{ after(grammarAccess.getHyNumberValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyStringValue
entryRuleHyStringValue
:
{ before(grammarAccess.getHyStringValueRule()); }
	 ruleHyStringValue
{ after(grammarAccess.getHyStringValueRule()); } 
	 EOF 
;

// Rule HyStringValue
ruleHyStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyStringValueAccess().getValueAssignment()); }
		(rule__HyStringValue__ValueAssignment)
		{ after(grammarAccess.getHyStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyBooleanValue
entryRuleHyBooleanValue
:
{ before(grammarAccess.getHyBooleanValueRule()); }
	 ruleHyBooleanValue
{ after(grammarAccess.getHyBooleanValueRule()); } 
	 EOF 
;

// Rule HyBooleanValue
ruleHyBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyBooleanValueAccess().getGroup()); }
		(rule__HyBooleanValue__Group__0)
		{ after(grammarAccess.getHyBooleanValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyEnumValue
entryRuleHyEnumValue
:
{ before(grammarAccess.getHyEnumValueRule()); }
	 ruleHyEnumValue
{ after(grammarAccess.getHyEnumValueRule()); } 
	 EOF 
;

// Rule HyEnumValue
ruleHyEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyEnumValueAccess().getGroup()); }
		(rule__HyEnumValue__Group__0)
		{ after(grammarAccess.getHyEnumValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyNestedArithmeticalValueExpression
entryRuleHyNestedArithmeticalValueExpression
:
{ before(grammarAccess.getHyNestedArithmeticalValueExpressionRule()); }
	 ruleHyNestedArithmeticalValueExpression
{ after(grammarAccess.getHyNestedArithmeticalValueExpressionRule()); } 
	 EOF 
;

// Rule HyNestedArithmeticalValueExpression
ruleHyNestedArithmeticalValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getGroup()); }
		(rule__HyNestedArithmeticalValueExpression__Group__0)
		{ after(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyContextInformationReferenceExpression
entryRuleHyContextInformationReferenceExpression
:
{ before(grammarAccess.getHyContextInformationReferenceExpressionRule()); }
	 ruleHyContextInformationReferenceExpression
{ after(grammarAccess.getHyContextInformationReferenceExpressionRule()); } 
	 EOF 
;

// Rule HyContextInformationReferenceExpression
ruleHyContextInformationReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationAssignment()); }
		(rule__HyContextInformationReferenceExpression__ContextInformationAssignment)
		{ after(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHyAttributeReferenceExpression
entryRuleHyAttributeReferenceExpression
:
{ before(grammarAccess.getHyAttributeReferenceExpressionRule()); }
	 ruleHyAttributeReferenceExpression
{ after(grammarAccess.getHyAttributeReferenceExpressionRule()); } 
	 EOF 
;

// Rule HyAttributeReferenceExpression
ruleHyAttributeReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getGroup()); }
		(rule__HyAttributeReferenceExpression__Group__0)
		{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule HyRelativeVersionRestrictionOperator
ruleHyRelativeVersionRestrictionOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getAlternatives()); }
		(rule__HyRelativeVersionRestrictionOperator__Alternatives)
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyArithmeticalComparisonExpressionParserRuleCall_0()); }
		(ruleHyArithmeticalComparisonExpression)
		{ after(grammarAccess.getTerminalExpressionAccess().getHyArithmeticalComparisonExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyFeatureReferenceExpressionParserRuleCall_1()); }
		ruleHyFeatureReferenceExpression
		{ after(grammarAccess.getTerminalExpressionAccess().getHyFeatureReferenceExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyNestedExpressionParserRuleCall_2()); }
		ruleHyNestedExpression
		{ after(grammarAccess.getTerminalExpressionAccess().getHyNestedExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyConditionalFeatureReferenceExpressionParserRuleCall_3()); }
		ruleHyConditionalFeatureReferenceExpression
		{ after(grammarAccess.getTerminalExpressionAccess().getHyConditionalFeatureReferenceExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyNotExpressionParserRuleCall_4()); }
		ruleHyNotExpression
		{ after(grammarAccess.getTerminalExpressionAccess().getHyNotExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getHyBooleanValueExpressionParserRuleCall_5()); }
		ruleHyBooleanValueExpression
		{ after(grammarAccess.getTerminalExpressionAccess().getHyBooleanValueExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRestriction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRestrictionAccess().getHyRelativeVersionRestrictionParserRuleCall_0()); }
		ruleHyRelativeVersionRestriction
		{ after(grammarAccess.getHyVersionRestrictionAccess().getHyRelativeVersionRestrictionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyVersionRestrictionAccess().getHyVersionRangeRestrictionParserRuleCall_1()); }
		ruleHyVersionRangeRestriction
		{ after(grammarAccess.getHyVersionRestrictionAccess().getHyVersionRangeRestrictionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_0()); }
		(rule__HyVersionRangeRestriction__Group_0__0)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_1()); }
		(rule__HyVersionRangeRestriction__Group_1__0)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_2()); }
		(rule__HyVersionRangeRestriction__Group_2__0)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValueExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyBooleanValueExpressionAccess().getValueAssignment_1_0()); }
		(rule__HyBooleanValueExpression__ValueAssignment_1_0)
		{ after(grammarAccess.getHyBooleanValueExpressionAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyBooleanValueExpressionAccess().getFalseKeyword_1_1()); }
		'false'
		{ after(grammarAccess.getHyBooleanValueExpressionAccess().getFalseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBinaryArithmeticalComparisonExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyGreaterOrEqualExpressionParserRuleCall_0()); }
		ruleHyGreaterOrEqualExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyGreaterOrEqualExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyGreaterExpressionParserRuleCall_1()); }
		ruleHyGreaterExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyGreaterExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyLessOrEqualExpressionParserRuleCall_2()); }
		ruleHyLessOrEqualExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyLessOrEqualExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyLessExpressionParserRuleCall_3()); }
		ruleHyLessExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyLessExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyNotEqualExpressionParserRuleCall_4()); }
		ruleHyNotEqualExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyNotEqualExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyEqualExpressionParserRuleCall_5()); }
		ruleHyEqualExpression
		{ after(grammarAccess.getHyBinaryArithmeticalComparisonExpressionAccess().getHyEqualExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalArithmeticalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyValueExpressionParserRuleCall_0()); }
		ruleHyValueExpression
		{ after(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyValueExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyNestedArithmeticalValueExpressionParserRuleCall_1()); }
		ruleHyNestedArithmeticalValueExpression
		{ after(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyNestedArithmeticalValueExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyContextInformationReferenceExpressionParserRuleCall_2()); }
		(ruleHyContextInformationReferenceExpression)
		{ after(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyContextInformationReferenceExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyAttributeReferenceExpressionParserRuleCall_3()); }
		ruleHyAttributeReferenceExpression
		{ after(grammarAccess.getTerminalArithmeticalExpressionAccess().getHyAttributeReferenceExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyValueAccess().getHyNumberValueParserRuleCall_0()); }
		ruleHyNumberValue
		{ after(grammarAccess.getHyValueAccess().getHyNumberValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyValueAccess().getHyStringValueParserRuleCall_1()); }
		ruleHyStringValue
		{ after(grammarAccess.getHyValueAccess().getHyStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getHyValueAccess().getHyBooleanValueParserRuleCall_2()); }
		ruleHyBooleanValue
		{ after(grammarAccess.getHyValueAccess().getHyBooleanValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getHyValueAccess().getHyEnumValueParserRuleCall_3()); }
		ruleHyEnumValue
		{ after(grammarAccess.getHyValueAccess().getHyEnumValueParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValue__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyBooleanValueAccess().getValueAssignment_1_0()); }
		(rule__HyBooleanValue__ValueAssignment_1_0)
		{ after(grammarAccess.getHyBooleanValueAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyBooleanValueAccess().getFalseKeyword_1_1()); }
		'false'
		{ after(grammarAccess.getHyBooleanValueAccess().getFalseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestrictionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getLessThanEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1()); }
		('<=')
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getLessThanOrEqualEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
		('=')
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3()); }
		('>=')
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getGreaterThanOrEqualEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4()); }
		('>')
		{ after(grammarAccess.getHyRelativeVersionRestrictionOperatorAccess().getGreaterThanEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConstraintModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyConstraintModel__Group__0__Impl
	rule__HyConstraintModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConstraintModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyConstraintModelAccess().getHyConstraintModelAction_0()); }
	()
	{ after(grammarAccess.getHyConstraintModelAccess().getHyConstraintModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConstraintModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyConstraintModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConstraintModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHyConstraintModelAccess().getConstraintsAssignment_1()); }
		(rule__HyConstraintModel__ConstraintsAssignment_1)
		{ after(grammarAccess.getHyConstraintModelAccess().getConstraintsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getHyConstraintModelAccess().getConstraintsAssignment_1()); }
		(rule__HyConstraintModel__ConstraintsAssignment_1)*
		{ after(grammarAccess.getHyConstraintModelAccess().getConstraintsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyImpliesExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyImpliesExpression__Group__0__Impl
	rule__HyImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyImpliesExpressionAccess().getHyEquivalenceExpressionParserRuleCall_0()); }
	ruleHyEquivalenceExpression
	{ after(grammarAccess.getHyImpliesExpressionAccess().getHyEquivalenceExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyImpliesExpressionAccess().getGroup_1()); }
	(rule__HyImpliesExpression__Group_1__0)*
	{ after(grammarAccess.getHyImpliesExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyImpliesExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyImpliesExpression__Group_1__0__Impl
	rule__HyImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyImpliesExpressionAccess().getHyImpliesExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyImpliesExpressionAccess().getHyImpliesExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyImpliesExpression__Group_1__1__Impl
	rule__HyImpliesExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyImpliesExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getHyImpliesExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyImpliesExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyImpliesExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyImpliesExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyImpliesExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyEquivalenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEquivalenceExpression__Group__0__Impl
	rule__HyEquivalenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEquivalenceExpressionAccess().getHyAndExpressionParserRuleCall_0()); }
	ruleHyAndExpression
	{ after(grammarAccess.getHyEquivalenceExpressionAccess().getHyAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEquivalenceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEquivalenceExpressionAccess().getGroup_1()); }
	(rule__HyEquivalenceExpression__Group_1__0)*
	{ after(grammarAccess.getHyEquivalenceExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyEquivalenceExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEquivalenceExpression__Group_1__0__Impl
	rule__HyEquivalenceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEquivalenceExpressionAccess().getHyEquivalenceExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyEquivalenceExpressionAccess().getHyEquivalenceExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEquivalenceExpression__Group_1__1__Impl
	rule__HyEquivalenceExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEquivalenceExpressionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_1()); }
	'<->'
	{ after(grammarAccess.getHyEquivalenceExpressionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEquivalenceExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEquivalenceExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyEquivalenceExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyEquivalenceExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAndExpression__Group__0__Impl
	rule__HyAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAndExpressionAccess().getHyOrExpressionParserRuleCall_0()); }
	ruleHyOrExpression
	{ after(grammarAccess.getHyAndExpressionAccess().getHyOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAndExpressionAccess().getGroup_1()); }
	(rule__HyAndExpression__Group_1__0)*
	{ after(grammarAccess.getHyAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAndExpression__Group_1__0__Impl
	rule__HyAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAndExpressionAccess().getHyAndExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyAndExpressionAccess().getHyAndExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAndExpression__Group_1__1__Impl
	rule__HyAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getHyAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAndExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyAndExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyAndExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyOrExpression__Group__0__Impl
	rule__HyOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyOrExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
	{ after(grammarAccess.getHyOrExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyOrExpressionAccess().getGroup_1()); }
	(rule__HyOrExpression__Group_1__0)*
	{ after(grammarAccess.getHyOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyOrExpression__Group_1__0__Impl
	rule__HyOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyOrExpressionAccess().getHyOrExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyOrExpressionAccess().getHyOrExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyOrExpression__Group_1__1__Impl
	rule__HyOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getHyOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyOrExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyOrExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyOrExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyNestedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedExpression__Group__0__Impl
	rule__HyNestedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getHyNestedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedExpression__Group__1__Impl
	rule__HyNestedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedExpressionAccess().getOperandAssignment_1()); }
	(rule__HyNestedExpression__OperandAssignment_1)
	{ after(grammarAccess.getHyNestedExpressionAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getHyNestedExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyNotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNotExpression__Group__0__Impl
	rule__HyNotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNotExpressionAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getHyNotExpressionAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNotExpressionAccess().getOperandAssignment_1()); }
	(rule__HyNotExpression__OperandAssignment_1)
	{ after(grammarAccess.getHyNotExpressionAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyFeatureReferenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyFeatureReferenceExpression__Group__0__Impl
	rule__HyFeatureReferenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyFeatureReferenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureAssignment_0()); }
	(rule__HyFeatureReferenceExpression__FeatureAssignment_0)
	{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyFeatureReferenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyFeatureReferenceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyFeatureReferenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getVersionRestrictionAssignment_1()); }
	(rule__HyFeatureReferenceExpression__VersionRestrictionAssignment_1)?
	{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getVersionRestrictionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyConditionalFeatureReferenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyConditionalFeatureReferenceExpression__Group__0__Impl
	rule__HyConditionalFeatureReferenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getQuestionMarkKeyword_0()); }
	'?'
	{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getQuestionMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyConditionalFeatureReferenceExpression__Group__1__Impl
	rule__HyConditionalFeatureReferenceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureAssignment_1()); }
	(rule__HyConditionalFeatureReferenceExpression__FeatureAssignment_1)
	{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyConditionalFeatureReferenceExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getVersionRestrictionAssignment_2()); }
	(rule__HyConditionalFeatureReferenceExpression__VersionRestrictionAssignment_2)?
	{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getVersionRestrictionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyRelativeVersionRestriction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyRelativeVersionRestriction__Group__0__Impl
	rule__HyRelativeVersionRestriction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyRelativeVersionRestriction__Group__1__Impl
	rule__HyRelativeVersionRestriction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getOperatorAssignment_1()); }
	(rule__HyRelativeVersionRestriction__OperatorAssignment_1)
	{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyRelativeVersionRestriction__Group__2__Impl
	rule__HyRelativeVersionRestriction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionAssignment_2()); }
	(rule__HyRelativeVersionRestriction__VersionAssignment_2)
	{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyRelativeVersionRestriction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyVersionRangeRestriction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_0__0__Impl
	rule__HyVersionRangeRestriction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedAssignment_0_1()); }
	(rule__HyVersionRangeRestriction__LowerIncludedAssignment_0_1)
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyVersionRangeRestriction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_1__0__Impl
	rule__HyVersionRangeRestriction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getFalseKeyword_1_0()); }
	'false'
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getFalseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_1__1__Impl
	rule__HyVersionRangeRestriction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionAssignment_1_1()); }
	(rule__HyVersionRangeRestriction__LowerVersionAssignment_1_1)
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_1__2__Impl
	rule__HyVersionRangeRestriction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getHyphenMinusKeyword_1_2()); }
	'-'
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getHyphenMinusKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedAssignment_1_3()); }
	(rule__HyVersionRangeRestriction__UpperIncludedAssignment_1_3)
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyVersionRangeRestriction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_2__0__Impl
	rule__HyVersionRangeRestriction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getFalseKeyword_2_0()); }
	'false'
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getFalseKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_2__1__Impl
	rule__HyVersionRangeRestriction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionAssignment_2_1()); }
	(rule__HyVersionRangeRestriction__UpperVersionAssignment_2_1)
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyVersionRangeRestriction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyBooleanValueExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyBooleanValueExpression__Group__0__Impl
	rule__HyBooleanValueExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValueExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyBooleanValueExpressionAccess().getHyBooleanValueExpressionAction_0()); }
	()
	{ after(grammarAccess.getHyBooleanValueExpressionAccess().getHyBooleanValueExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValueExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyBooleanValueExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValueExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyBooleanValueExpressionAccess().getAlternatives_1()); }
	(rule__HyBooleanValueExpression__Alternatives_1)
	{ after(grammarAccess.getHyBooleanValueExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyGreaterExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterExpression__Group__0__Impl
	rule__HyGreaterExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyGreaterExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyGreaterExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterExpression__Group__1__Impl
	rule__HyGreaterExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterExpressionAccess().getGreaterThanSignKeyword_1()); }
	'>'
	{ after(grammarAccess.getHyGreaterExpressionAccess().getGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyGreaterExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyGreaterExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyLessExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessExpression__Group__0__Impl
	rule__HyLessExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyLessExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyLessExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessExpression__Group__1__Impl
	rule__HyLessExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessExpressionAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getHyLessExpressionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyLessExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyLessExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyGreaterOrEqualExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterOrEqualExpression__Group__0__Impl
	rule__HyGreaterOrEqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyGreaterOrEqualExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterOrEqualExpression__Group__1__Impl
	rule__HyGreaterOrEqualExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getGreaterThanSignEqualsSignKeyword_1()); }
	'>='
	{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getGreaterThanSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyGreaterOrEqualExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyGreaterOrEqualExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyLessOrEqualExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessOrEqualExpression__Group__0__Impl
	rule__HyLessOrEqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyLessOrEqualExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessOrEqualExpression__Group__1__Impl
	rule__HyLessOrEqualExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getLessThanSignEqualsSignKeyword_1()); }
	'<='
	{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getLessThanSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyLessOrEqualExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyLessOrEqualExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyEqualExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEqualExpression__Group__0__Impl
	rule__HyEqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEqualExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyEqualExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyEqualExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEqualExpression__Group__1__Impl
	rule__HyEqualExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEqualExpressionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getHyEqualExpressionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEqualExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEqualExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyEqualExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyEqualExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyNotEqualExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNotEqualExpression__Group__0__Impl
	rule__HyNotEqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNotEqualExpressionAccess().getOperand1Assignment_0()); }
	(rule__HyNotEqualExpression__Operand1Assignment_0)
	{ after(grammarAccess.getHyNotEqualExpressionAccess().getOperand1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNotEqualExpression__Group__1__Impl
	rule__HyNotEqualExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNotEqualExpressionAccess().getExclamationMarkEqualsSignKeyword_1()); }
	'!='
	{ after(grammarAccess.getHyNotEqualExpressionAccess().getExclamationMarkEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNotEqualExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNotEqualExpressionAccess().getOperand2Assignment_2()); }
	(rule__HyNotEqualExpression__Operand2Assignment_2)
	{ after(grammarAccess.getHyNotEqualExpressionAccess().getOperand2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyDivisionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyDivisionExpression__Group__0__Impl
	rule__HyDivisionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyDivisionExpressionAccess().getHyMultiplicationExpressionParserRuleCall_0()); }
	ruleHyMultiplicationExpression
	{ after(grammarAccess.getHyDivisionExpressionAccess().getHyMultiplicationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyDivisionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyDivisionExpressionAccess().getGroup_1()); }
	(rule__HyDivisionExpression__Group_1__0)*
	{ after(grammarAccess.getHyDivisionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyDivisionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyDivisionExpression__Group_1__0__Impl
	rule__HyDivisionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyDivisionExpressionAccess().getHyDivisionExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyDivisionExpressionAccess().getHyDivisionExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyDivisionExpression__Group_1__1__Impl
	rule__HyDivisionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyDivisionExpressionAccess().getSolidusKeyword_1_1()); }
	'/'
	{ after(grammarAccess.getHyDivisionExpressionAccess().getSolidusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyDivisionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyDivisionExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyDivisionExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyDivisionExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyMultiplicationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyMultiplicationExpression__Group__0__Impl
	rule__HyMultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyMultiplicationExpressionAccess().getHySubtractionExpressionParserRuleCall_0()); }
	ruleHySubtractionExpression
	{ after(grammarAccess.getHyMultiplicationExpressionAccess().getHySubtractionExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyMultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyMultiplicationExpressionAccess().getGroup_1()); }
	(rule__HyMultiplicationExpression__Group_1__0)*
	{ after(grammarAccess.getHyMultiplicationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyMultiplicationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyMultiplicationExpression__Group_1__0__Impl
	rule__HyMultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyMultiplicationExpressionAccess().getHyMultiplicationExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyMultiplicationExpressionAccess().getHyMultiplicationExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyMultiplicationExpression__Group_1__1__Impl
	rule__HyMultiplicationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyMultiplicationExpressionAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getHyMultiplicationExpressionAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyMultiplicationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyMultiplicationExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyMultiplicationExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyMultiplicationExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HySubtractionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HySubtractionExpression__Group__0__Impl
	rule__HySubtractionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHySubtractionExpressionAccess().getHyAdditionExpressionParserRuleCall_0()); }
	ruleHyAdditionExpression
	{ after(grammarAccess.getHySubtractionExpressionAccess().getHyAdditionExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HySubtractionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHySubtractionExpressionAccess().getGroup_1()); }
	(rule__HySubtractionExpression__Group_1__0)*
	{ after(grammarAccess.getHySubtractionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HySubtractionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HySubtractionExpression__Group_1__0__Impl
	rule__HySubtractionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHySubtractionExpressionAccess().getHySubtractionExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHySubtractionExpressionAccess().getHySubtractionExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HySubtractionExpression__Group_1__1__Impl
	rule__HySubtractionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHySubtractionExpressionAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getHySubtractionExpressionAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HySubtractionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHySubtractionExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HySubtractionExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHySubtractionExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyAdditionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAdditionExpression__Group__0__Impl
	rule__HyAdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAdditionExpressionAccess().getTerminalArithmeticalExpressionParserRuleCall_0()); }
	ruleTerminalArithmeticalExpression
	{ after(grammarAccess.getHyAdditionExpressionAccess().getTerminalArithmeticalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAdditionExpressionAccess().getGroup_1()); }
	(rule__HyAdditionExpression__Group_1__0)*
	{ after(grammarAccess.getHyAdditionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyAdditionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAdditionExpression__Group_1__0__Impl
	rule__HyAdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAdditionExpressionAccess().getHyAdditionExpressionOperand1Action_1_0()); }
	()
	{ after(grammarAccess.getHyAdditionExpressionAccess().getHyAdditionExpressionOperand1Action_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAdditionExpression__Group_1__1__Impl
	rule__HyAdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAdditionExpressionAccess().getPlusSignKeyword_1_1()); }
	'+'
	{ after(grammarAccess.getHyAdditionExpressionAccess().getPlusSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAdditionExpressionAccess().getOperand2Assignment_1_2()); }
	(rule__HyAdditionExpression__Operand2Assignment_1_2)
	{ after(grammarAccess.getHyAdditionExpressionAccess().getOperand2Assignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyBooleanValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyBooleanValue__Group__0__Impl
	rule__HyBooleanValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyBooleanValueAccess().getHyBooleanValueAction_0()); }
	()
	{ after(grammarAccess.getHyBooleanValueAccess().getHyBooleanValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyBooleanValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyBooleanValueAccess().getAlternatives_1()); }
	(rule__HyBooleanValue__Alternatives_1)
	{ after(grammarAccess.getHyBooleanValueAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyEnumValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEnumValue__Group__0__Impl
	rule__HyEnumValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEnumValueAccess().getEnumAssignment_0()); }
	(rule__HyEnumValue__EnumAssignment_0)
	{ after(grammarAccess.getHyEnumValueAccess().getEnumAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEnumValue__Group__1__Impl
	rule__HyEnumValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEnumValueAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getHyEnumValueAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyEnumValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyEnumValueAccess().getEnumLiteralAssignment_2()); }
	(rule__HyEnumValue__EnumLiteralAssignment_2)
	{ after(grammarAccess.getHyEnumValueAccess().getEnumLiteralAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyNestedArithmeticalValueExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedArithmeticalValueExpression__Group__0__Impl
	rule__HyNestedArithmeticalValueExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedArithmeticalValueExpression__Group__1__Impl
	rule__HyNestedArithmeticalValueExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getOperandAssignment_1()); }
	(rule__HyNestedArithmeticalValueExpression__OperandAssignment_1)
	{ after(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyNestedArithmeticalValueExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyAttributeReferenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAttributeReferenceExpression__Group__0__Impl
	rule__HyAttributeReferenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureAssignment_0()); }
	(rule__HyAttributeReferenceExpression__FeatureAssignment_0)
	{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAttributeReferenceExpression__Group__1__Impl
	rule__HyAttributeReferenceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HyAttributeReferenceExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeAssignment_2()); }
	(rule__HyAttributeReferenceExpression__AttributeAssignment_2)
	{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HyConstraintModel__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyConstraintModelAccess().getConstraintsHyConstraintParserRuleCall_1_0()); }
		ruleHyConstraint
		{ after(grammarAccess.getHyConstraintModelAccess().getConstraintsHyConstraintParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConstraint__RootExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyConstraintAccess().getRootExpressionHyExpressionParserRuleCall_0()); }
		ruleHyExpression
		{ after(grammarAccess.getHyConstraintAccess().getRootExpressionHyExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyImpliesExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyImpliesExpressionAccess().getOperand2HyEquivalenceExpressionParserRuleCall_1_2_0()); }
		ruleHyEquivalenceExpression
		{ after(grammarAccess.getHyImpliesExpressionAccess().getOperand2HyEquivalenceExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEquivalenceExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyEquivalenceExpressionAccess().getOperand2HyAndExpressionParserRuleCall_1_2_0()); }
		ruleHyAndExpression
		{ after(grammarAccess.getHyEquivalenceExpressionAccess().getOperand2HyAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAndExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyAndExpressionAccess().getOperand2HyOrExpressionParserRuleCall_1_2_0()); }
		ruleHyOrExpression
		{ after(grammarAccess.getHyAndExpressionAccess().getOperand2HyOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyOrExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyOrExpressionAccess().getOperand2TerminalExpressionParserRuleCall_1_2_0()); }
		ruleTerminalExpression
		{ after(grammarAccess.getHyOrExpressionAccess().getOperand2TerminalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedExpression__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNestedExpressionAccess().getOperandHyExpressionParserRuleCall_1_0()); }
		ruleHyExpression
		{ after(grammarAccess.getHyNestedExpressionAccess().getOperandHyExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotExpression__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNotExpressionAccess().getOperandTerminalExpressionParserRuleCall_1_0()); }
		ruleTerminalExpression
		{ after(grammarAccess.getHyNotExpressionAccess().getOperandTerminalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyFeatureReferenceExpression__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0_0()); }
		(
			{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyFeatureReferenceExpression__VersionRestrictionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyFeatureReferenceExpressionAccess().getVersionRestrictionHyVersionRestrictionParserRuleCall_1_0()); }
		ruleHyVersionRestriction
		{ after(grammarAccess.getHyFeatureReferenceExpressionAccess().getVersionRestrictionHyVersionRestrictionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getFeatureHyFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyConditionalFeatureReferenceExpression__VersionRestrictionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getVersionRestrictionHyVersionRestrictionParserRuleCall_2_0()); }
		ruleHyVersionRestriction
		{ after(grammarAccess.getHyConditionalFeatureReferenceExpressionAccess().getVersionRestrictionHyVersionRestrictionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getOperatorHyRelativeVersionRestrictionOperatorEnumRuleCall_1_0()); }
		ruleHyRelativeVersionRestrictionOperator
		{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getOperatorHyRelativeVersionRestrictionOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyRelativeVersionRestriction__VersionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionHyVersionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionHyVersionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionHyVersionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getHyRelativeVersionRestrictionAccess().getVersionHyVersionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__LowerIncludedAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0()); }
			'true'
			{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerIncludedTrueKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__LowerVersionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionHyVersionCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionHyVersionSTRINGTerminalRuleCall_1_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionHyVersionSTRINGTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getLowerVersionHyVersionCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__UpperIncludedAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0()); }
			'true'
			{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperIncludedTrueKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyVersionRangeRestriction__UpperVersionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionHyVersionCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionHyVersionSTRINGTerminalRuleCall_2_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionHyVersionSTRINGTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getHyVersionRangeRestrictionAccess().getUpperVersionHyVersionCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValueExpression__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyBooleanValueExpressionAccess().getValueTrueKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getHyBooleanValueExpressionAccess().getValueTrueKeyword_1_0_0()); }
			'true'
			{ after(grammarAccess.getHyBooleanValueExpressionAccess().getValueTrueKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getHyBooleanValueExpressionAccess().getValueTrueKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyGreaterExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyGreaterExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyGreaterExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyGreaterExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyLessExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyLessExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyLessExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyLessExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyGreaterOrEqualExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyGreaterOrEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyLessOrEqualExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyLessOrEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEqualExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Operand1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNotEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyNotEqualExpressionAccess().getOperand1HyArithmeticalValueExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNotEqualExpression__Operand2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNotEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
		ruleHyArithmeticalValueExpression
		{ after(grammarAccess.getHyNotEqualExpressionAccess().getOperand2HyArithmeticalValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyDivisionExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyDivisionExpressionAccess().getOperand2HyMultiplicationExpressionParserRuleCall_1_2_0()); }
		ruleHyMultiplicationExpression
		{ after(grammarAccess.getHyDivisionExpressionAccess().getOperand2HyMultiplicationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyMultiplicationExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyMultiplicationExpressionAccess().getOperand2HySubtractionExpressionParserRuleCall_1_2_0()); }
		ruleHySubtractionExpression
		{ after(grammarAccess.getHyMultiplicationExpressionAccess().getOperand2HySubtractionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HySubtractionExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHySubtractionExpressionAccess().getOperand2HyAdditionExpressionParserRuleCall_1_2_0()); }
		ruleHyAdditionExpression
		{ after(grammarAccess.getHySubtractionExpressionAccess().getOperand2HyAdditionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAdditionExpression__Operand2Assignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyAdditionExpressionAccess().getOperand2TerminalArithmeticalExpressionParserRuleCall_1_2_0()); }
		ruleTerminalArithmeticalExpression
		{ after(grammarAccess.getHyAdditionExpressionAccess().getOperand2TerminalArithmeticalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyValueExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyValueExpressionAccess().getValueHyValueParserRuleCall_0()); }
		ruleHyValue
		{ after(grammarAccess.getHyValueExpressionAccess().getValueHyValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNumberValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNumberValueAccess().getValueEIntParserRuleCall_0()); }
		ruleEInt
		{ after(grammarAccess.getHyNumberValueAccess().getValueEIntParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyStringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getHyStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyBooleanValue__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getHyBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
			'true'
			{ after(grammarAccess.getHyBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getHyBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__EnumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyEnumValueAccess().getEnumHyEnumCrossReference_0_0()); }
		(
			{ before(grammarAccess.getHyEnumValueAccess().getEnumHyEnumSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyEnumValueAccess().getEnumHyEnumSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getHyEnumValueAccess().getEnumHyEnumCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyEnumValue__EnumLiteralAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyEnumValueAccess().getEnumLiteralHyEnumLiteralCrossReference_2_0()); }
		(
			{ before(grammarAccess.getHyEnumValueAccess().getEnumLiteralHyEnumLiteralSTRINGTerminalRuleCall_2_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyEnumValueAccess().getEnumLiteralHyEnumLiteralSTRINGTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getHyEnumValueAccess().getEnumLiteralHyEnumLiteralCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyNestedArithmeticalValueExpression__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getOperandHyDivisionExpressionParserRuleCall_1_0()); }
		ruleHyDivisionExpression
		{ after(grammarAccess.getHyNestedArithmeticalValueExpressionAccess().getOperandHyDivisionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyContextInformationReferenceExpression__ContextInformationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationHyContextualInformationCrossReference_0()); }
		(
			{ before(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationHyContextualInformationSTRINGTerminalRuleCall_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationHyContextualInformationSTRINGTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getHyContextInformationReferenceExpressionAccess().getContextInformationHyContextualInformationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0_0()); }
		(
			{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureHyFeatureSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getFeatureHyFeatureCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HyAttributeReferenceExpression__AttributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeHyFeatureAttributeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeHyFeatureAttributeSTRINGTerminalRuleCall_2_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeHyFeatureAttributeSTRINGTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getHyAttributeReferenceExpressionAccess().getAttributeHyFeatureAttributeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
