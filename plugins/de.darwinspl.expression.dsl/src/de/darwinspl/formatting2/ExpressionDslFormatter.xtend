/*
 * generated by Xtext 2.12.0
 */
package de.darwinspl.formatting2

import com.google.inject.Inject
import de.darwinspl.services.ExpressionDslGrammarAccess
import eu.hyvar.feature.expression.HyAndExpression
import eu.hyvar.feature.expression.HyOrExpression
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class ExpressionDslFormatter extends AbstractFormatter2 {
	
	@Inject extension ExpressionDslGrammarAccess

	def dispatch void format(HyAndExpression hyAndExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		hyAndExpression.getOperand2.format;
		hyAndExpression.getOperand1.format;
	}

	def dispatch void format(HyOrExpression hyOrExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		hyOrExpression.getOperand2.format;
		hyOrExpression.getOperand1.format;
	}
	
	// TODO: implement for HyEquivalenceExpression, HyImpliesExpression, HyAbstractFeatureReferenceExpression, HyNestedExpression, HyNotExpression, HyGreaterExpression, HyLessExpression, HyGreaterOrEqualExpression, HyLessOrEqualExpression, HyEqualExpression, HyNotEqualExpression, HyAdditionExpression, HySubtractionExpression, HyMultiplicationExpression, HyDivisionExpression, HyModuloExpression, HyNegationExpression, HyValueExpression
}
